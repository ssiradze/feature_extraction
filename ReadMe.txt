The code in this repository was written for the automatic extraction of features from a raw experimental dataset.

Reference: to be updated when article gets published

The tool was written in Python (version 3.7.1.), using the web application Jupyter Notebook (available through the distribution Anaconda). The input consists of a raw experimental dataset in a CSV or Excel format.
The tool is applicable for gas phase reactions using flow rates to measure the components. It is also assumed that carbon chemistry is considered to calculate the selectivities to the products.

See the example input files 'HDO Standardised.csv' or 'HDO Standardised.xlsx' for the general structure of the input file and the units to be used.
This dataset concerns the hydrodeoxygenation of anisole and is described in the following article: D. Otyuskaya et al. Energy Fuels 2017, 31, 7, 7082â€“7092

The reposity contains the following files:

CodeFinal_CSV.ipynb         - The main Jupyter Notebook file to be used to run the code when the input dataset is in a CSV file
CodeFinal_Excel.ipynb       - The main Jupyter Notebook file to be used to run the code when the input dataset is in an Excel file
FeatureExtraction.ipynb     - The Jupyter Notebook file containing the algorithms used during the feature extraction
FeatureExtraction.py        - The Python file used by the main file (CodeFinal_CSV.ipynb or CodeFinal_Excel.ipynb) containing the algorithms used during the feature extraction
HDO Standardised.csv        - An example of an input file in CSV format (hydrodeoxygenation dataset)
HDO Standardised.xlsx       - An example of an input file in Excel format (hydrodeoxygenation dataset)
ImportData.ipynb            - The Jupyter Notebook file containing the algorithms used during the data treatment
ImportData.py               - The Python file used by the main file (CodeFinal_CSV.ipynb or CodeFinal_Excel.ipynb) containing the algorithms used during the data treatment

To read the dataset correctly, the tool requires some user input. When the tool is run, it first asks for the numbers of reactants, inerts and products. Their sum should equal the total number of components and the number of inlet and outlet flow rates in the input file.
Then, the names of all components are requested in order to put the names in the graphs generated by the tool. Afterwards, the number of carbon atoms of each component is asked to be able to calculate the selectivities correctly.
The molar masses of all components are asked as well to check the mass balance.

Once all of this information has been entered, the tool shows the data which has been read: the process conditions (catalyst mass, temperature and pressure), the inlet molar flow rates and the outlet molar flow rates. The inlet mass flow rates and outlet mass flow rates are shown as well.

Afterwards, a table is shown of the independent variables which are considered by the tool: temperature, total pressure, space-time and reactant ratios.
It is then requested to give a value for the error of each of these independent variables. This allows the code to group close values for the independent variables into one if they are within the expected error margin.
A table with the adjusted values for the independent variables is shown afterwards, and so is a table with the values of the dependent variables.

The first plots which are generated are plots containing all the experimental data. The conversion is plotted in function of all independent variables, while the product selectivities are plotted in function of the conversion.
These plots allow the user to see the general effect of the independent variable or the conversion on the dependent variables.

Afterwards, the code looks for combinations of data points which can be used for a plot in which only one independent variable is varied and the tool visualizes all of the sub-datasets which were found. The tool then asks which of these plots should be used for the feature extraction.
The feature extraction is then applied to all the selected plots and their results are shown. For each plot, the extracted primitives are shown along with their extremes and possible minima/maxima.

The software can be used under the following license: CC BY-NC 4.0
